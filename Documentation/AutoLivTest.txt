=============================================================================
List of generated methods in project: AutoLivTest

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "clockManager1" (component clock_manager)
   - clockManager1_CLOCK_SYS_Init -Install pre-defined clock configurations.
   - clockManager1_CLOCK_SYS_UpdateConfiguration -Set system clock configuration according to pre-defined structure.
   - clockManager1_CLOCK_SYS_SetConfiguration -Set system clock configuration.
   - clockManager1_CLOCK_SYS_GetCurrentConfiguration -Get current system clock configuration.
   - clockManager1_CLOCK_SYS_GetErrorCallback -Get the callback which returns error in last clock switch.
   - clockManager1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.
   - clockManager1_CLOCK_DRV_Init -Initialize clocking modules
   - clockManager1_CLOCK_DRV_GetFreq -Return frequency
   - clockManager1_CLOCK_DRV_EnablePeripheralClock -Enables peripheral clock
   - clockManager1_CLOCK_DRV_DisablePeripheralClock -Disables peripheral clock
   - clockManager1_CLOCK_DRV_SetSystemClock -Configures the system clocks
   - clockManager1_CLOCK_DRV_GetSystemClockSource -Gets the system clock source
   - clockManager1_CLOCK_DRV_SetIrc -Enable or disable SIRC clock source.
   - clockManager1_CLOCK_DRV_SetXosc -Enable or disable SOSC clock source
   - clockManager1_CLOCK_DRV_SetPll -Enable or disable SPLL clock source
   - clockManager1_CLOCK_DRV_SetLpo -Enable or disable LPO clock source

Module "interruptManager1" (component interrupt_manager)
   - interruptManager1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - interruptManager1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - interruptManager1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - interruptManager1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - interruptManager1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - interruptManager1_INT_SYS_SetPriority -Set Interrupt Priority.
   - interruptManager1_INT_SYS_GetPriority -Get Interrupt Priority.
   - interruptManager1_INT_SYS_ClearPending -Clear Pending Interrupt.
   - interruptManager1_INT_SYS_SetPending -Set Pending Interrupt.
   - interruptManager1_INT_SYS_GetPending -Get Pending Interrupt.
   - interruptManager1_INT_SYS_GetActive -Get Active Interrupt.

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetMuxModeSel -This function configures the pin muxing
   - pin_mux_PINS_DRV_SetPinIntSel -This function configures the port pin interrupt/DMA request
   - pin_mux_PINS_DRV_GetPinIntSel -This function gets the current port pin interrupt/DMA request configuration
   - pin_mux_PINS_DRV_ClearPinIntFlagCmd -This function clears the individual pin-interrupt status flag
   - pin_mux_PINS_DRV_EnableDigitalFilter -This function enables digital filter feature for digital pin muxing
   - pin_mux_PINS_DRV_DisableDigitalFilter -This function disables digital filter feature for digital pin muxing
   - pin_mux_PINS_DRV_ConfigDigitalFilter -This function configures digital filter for port with given configuration
   - pin_mux_PINS_DRV_GetPortIntFlag -This function reads the entire port interrupt status flag
   - pin_mux_PINS_DRV_ClearPortIntFlagCmd -This function clears the entire port interrupt status flag
   - pin_mux_PINS_DRV_SetGlobalPinControl -This function quickly configures multiple pins within the one port for the same 
                peripheral function with the same pin configuration
   - pin_mux_PINS_DRV_SetGlobalIntControl -This function quickly configures multiple pins within the one port for the same 
                peripheral function with the same interrupt configuration
   - pin_mux_PINS_DRV_GetPinsDirection -This function returns the current pins directions for a port. Pins corresponding to 
                bits with value of '1' are configured as output and pins corresponding to bits with value of '0' are configured 
                as input.
   - pin_mux_PINS_DRV_SetPinDirection -This function configures the direction for the given pin, with the given value('1' for 
                pin to be configured as output and '0' for pin to be configured as input)
   - pin_mux_PINS_DRV_SetPinsDirection -This function sets the direction configuration for all pins in a port. Pins 
                corresponding to bits with value of '1' will be configured as output and pins corresponding to bits with value 
                of '0' will be configured as input.
   - pin_mux_PINS_DRV_SetPortInputDisable -This function sets the pins input state for a port. Pins corresponding to bits with 
                value of '1' will not be configured as input and pins corresponding to bits with value of '0' will be 
                configured as input
   - pin_mux_PINS_DRV_GetPortInputDisable -This function returns the current pins input state for a port. Pins corresponding to 
                bits with value of '1' are not configured as input and pins corresponding to bits with value of '0' are 
                configured as input
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, with the given value ('0' represents LOW, '1' 
                represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as output with the values given in the parameter pins.
                '0' represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output that is written to a port. Only pins that are 
                configured as output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                value of 'set' (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                'cleared' value (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in parameter pins (bits that are '1'). Pins 
                corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values from a port. Only pins configured as input will 
                have meaningful values

Module "lpTmr1"    (component lptmr)
   - lpTmr1_LPTMR_DRV_InitConfigStruct -Initialize configuration structure.
   - lpTmr1_LPTMR_DRV_Init -Initializes the LPTMR as Timer or Pulse Counter
   - lpTmr1_LPTMR_DRV_SetConfig -Configure a LPTMR instance.
   - lpTmr1_LPTMR_DRV_GetConfig -Get the current configuration of a LPTMR instance.
   - lpTmr1_LPTMR_DRV_Deinit -Deinitializes a LPTMR instance.
   - lpTmr1_LPTMR_DRV_SetCompareValueByCount -Change the Compare Value in counter tick units.
   - lpTmr1_LPTMR_DRV_GetCompareValueByCount -Get the Compare Value in counter tick units.
   - lpTmr1_LPTMR_DRV_SetCompareValueByUs -Set the compare value for Timer Mode in microseconds.
   - lpTmr1_LPTMR_DRV_GetCompareValueByUs -Get the Compare Value in microseconds.
   - lpTmr1_LPTMR_DRV_GetCompareFlag -Get the current state of the Compare Flag (Interrupt Pending)
   - lpTmr1_LPTMR_DRV_ClearCompareFlag -Clear the Compare/Interrupt Pending Flag.
   - lpTmr1_LPTMR_DRV_IsRunning -Get the run state of a LPTMR instance.
   - lpTmr1_LPTMR_DRV_SetInterrupt -Enable/disable the LPTMR interrupt
   - lpTmr1_LPTMR_DRV_GetCounterValueByCount -Get the current counter value in counter tick units.
   - lpTmr1_LPTMR_DRV_StartCounter -Enable the LPTMR / Start the counter.
   - lpTmr1_LPTMR_DRV_StopCounter -Disable the LPTMR / Stop the counter.
   - lpTmr1_LPTMR_DRV_SetPinConfiguration -Set the Input Pin configuration for Pulse Counter mode.

Module "lpit1"     (component lpit)
   - lpit1_LPIT_DRV_Init -Initializes the LPIT module.
   - lpit1_LPIT_DRV_Deinit -De-initializes LPIT module.
   - lpit1_LPIT_DRV_InitChannel -Initializes the LPIT channel.
   - lpit1_LPIT_DRV_StartTimerChannels -Starts the timer channel counting.
   - lpit1_LPIT_DRV_StopTimerChannels -Stops the timer channel counting.
   - lpit1_LPIT_DRV_SetTimerPeriodByUs -Sets the timer channel period in microseconds.
   - lpit1_LPIT_DRV_SetTimerPeriodInDual16ModeByUs -Sets the timer channel period in microseconds when the timer channel mode 
                is dual 16 bit periodic counter.
   - lpit1_LPIT_DRV_GetTimerPeriodByUs -Gets the timer channel period in microseconds.
   - lpit1_LPIT_DRV_GetCurrentTimerUs -Gets the current timer channel counting value in microseconds.
   - lpit1_LPIT_DRV_SetTimerPeriodByCount -Sets the timer channel period in count unit.
   - lpit1_LPIT_DRV_SetTimerPeriodInDual16ModeByCount -Sets the timer channel period in count when the timer channel mode is 
                dual 16 bit periodic counter.
   - lpit1_LPIT_DRV_GetTimerPeriodByCount -Gets the current timer channel period in count unit.
   - lpit1_LPIT_DRV_GetCurrentTimerCount -Gets the current timer channel counting value in count.
   - lpit1_LPIT_DRV_GetInterruptFlagTimerChannels -Gets the current interrupt flag of timer channels.
   - lpit1_LPIT_DRV_ClearInterruptFlagTimerChannels -Clears the interrupt flag of timer channels.

Module "Cpu"       (component S32K144_64)
   - Cpu_SystemInit -This function disables the watchdog, enables FPU and the power mode protection. SystemInit is called from 
                startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock. It must be called whenever the core clock is changed during program execution
   - Cpu_SystemSoftwareReset -This method initiates initiate a system reset.

===================================================================================
